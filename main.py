import requests
import telebot
from telebot import types
from bs4 import BeautifulSoup
import lxml
import csv
import math


with open("token.txt") as file:
    bot = telebot.TeleBot(file.readline(), parse_mode='HTML')
file.close()


def clouds_emoji(clouds_now):
    clouds_now = clouds_now.lower()
    if "–¥–æ–∂–¥—å" in clouds_now:
        return("üåß")
    elif "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å" in clouds_now:
        return("üå¶")
    elif "–ø–∞—Å–º—É—Ä–Ω–æ" in clouds_now:
        return ("‚òÅÔ∏è")
    elif "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å" in clouds_now:
        return("üå•")
    elif "–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ" in clouds_now:
        return("‚õÖÔ∏è")
    elif "–æ–±–ª–∞—á–Ω–æ –∏ —è—Å–Ω–æ" in clouds_now:
        return("üå§")
    elif "—Å–æ–ª–Ω–µ—á–Ω–æ –∏ —è—Å–Ω–æ" in clouds_now:
        return("‚òÄÔ∏è")
    elif "—è—Å–Ω–æ–µ –Ω–µ–±–æ" in clouds_now:
        return("‚òÄÔ∏è")
    elif "—Å–Ω–µ–≥" in clouds_now:
        return("üå®")
    elif "–º–æ–∫—Ä—ã–π —Å–Ω–µ–≥" in clouds_now:
        return("üå®")
    elif "–≥—Ä—è–∑—å —Å –ø—ã–ª—å—é" in clouds_now:
        return("üå´")
    elif "—Ç—É–º–∞–Ω" in clouds_now:
        return("üå´")
    elif "–¥—ã–º–∫–∞" in clouds_now:
        return("üå´")
    elif "–≥—Ä–æ–∑–∞" in clouds_now:
        return("‚õà")
    else:
        return("|")


def replace_temp_symbols(temp):
    temp_pack = []
    for i in range(0, len(temp)):
        new_temp = str(temp[i])
        new_temp = new_temp.replace('<span class="t">', "")
        new_temp = new_temp.replace('</span>', "")
        new_temp = new_temp.replace('¬∞', "")
        new_temp = new_temp.replace('+', "")
        new_temp = new_temp.replace('...', " ")
        temp_pack.append(list(map(str, new_temp.split())))
    return(temp_pack)


def replace_clouds_symbols(clouds):
    clouds_pack = []
    for i in range(0, len(clouds)):
        new_clouds = str(clouds[i])
        new_clouds = new_clouds.replace('<div class="cl_title">', "")
        new_clouds = new_clouds.replace('<br/>', "+")
        new_clouds = new_clouds.replace('</div>', "")
        new_clouds = new_clouds[0].upper() + new_clouds[1::]
        clouds_pack.append(list(map(str, new_clouds.split("+"))))
    return(clouds_pack)


def weather_now():
    weather_pack = []
    url = "https://www.pogoda.com/saint-petersburg.htm"
    r = requests.get(url)
    bs = BeautifulSoup(r.text, "lxml")

    ### –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê
    temp = bs.find_all("span", class_="dato-temperatura changeUnitT")
    for temp in temp:
        temp_now = (temp.get("data"))
    temp_now = str(temp_now).replace("|0|","")
    temp_now = "<b>" + str(int(round(float(temp_now)))) + "¬∞C</b>"
    weather_pack.append(str(temp_now))
    print(temp_now)

    ### –ü–û –û–©–£–©–ï–ù–ò–Ø–ú
    temp = bs.find_all("span", class_="sensacion changeUnitT")
    for temp in temp:
        temp_feeling = (temp.get("data"))
    temp_feeling = str(temp_feeling).replace("|0|–ü–æ –æ—â—É—â–µ–Ω–∏—è–º", "")
    temp_feeling = "<i>" + "–ü–æ –æ—â—É—â–µ–Ω–∏—è–º " + str(int(round(float(temp_feeling)))) + "¬∞C" + "</i>"
    weather_pack.append(str(temp_feeling))
    print(temp_feeling)
    
    ### –û–ë–õ–ê–ß–ù–û–°–¢–¨
    clouds = bs.find_all("img", width="64")
    for clouds in clouds:
        clouds_now = (clouds.get("alt"))
    weather_pack[0] = weather_pack[0] + " " + clouds_emoji(clouds_now) + " " + str(clouds_now)
    print(clouds_now)

    return(weather_pack)


def weather_3days():
    weather_pack = []
    url = "https://spb.nuipogoda.ru/–ø–æ–≥–æ–¥–∞-–Ω–∞-14-–¥–Ω–µ–π"
    r = requests.get(url)
    bs = BeautifulSoup(r.text, "lxml")

    ### –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê
    temp = bs.find_all("span", class_="t")
    temp_2weeks = replace_temp_symbols(temp)
    print(temp_2weeks)

    ### –û–ë–õ–ê–ß–ù–û–°–¢–¨
    clouds = bs.find_all("div", class_="cl_title")
    clouds_2weeks = replace_clouds_symbols(clouds)
    print(clouds_2weeks)

    weather_pack_3days = []
    weather_pack_3days.append("‚ú®–ó–∞–≤—Ç—Ä–∞")
    weather_pack_3days.append("<b>" + temp_2weeks[1][0] + "¬∞C - " + temp_2weeks[1][1] + "¬∞C</b>")
    weather_pack_3days.append("<i>" + clouds_2weeks[1][0] + ", " + clouds_2weeks[1][1] + "</i>")
    weather_pack_3days.append("")
    weather_pack_3days.append("‚ú®–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞")
    weather_pack_3days.append("<b>" + temp_2weeks[2][0] + "¬∞C - " + temp_2weeks[2][1] + "¬∞C</b>")
    weather_pack_3days.append("<i>" + clouds_2weeks[2][0] + ", " + clouds_2weeks[2][1] + "</i>")
    weather_pack_3days.append("")
    weather_pack_3days.append("‚ú®–ß–µ—Ä–µ–∑ 2 –¥–Ω—è")
    weather_pack_3days.append("<b>" + temp_2weeks[3][0] + "¬∞C - " + temp_2weeks[3][1] + "¬∞C</b>")
    weather_pack_3days.append("<i>" + clouds_2weeks[3][0] + ", " + clouds_2weeks[3][1] + "</i>")

    return(weather_pack_3days)


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚ö°Ô∏è –ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å")
    btn2 = types.KeyboardButton("üåà –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name} {0.last_name}!\n–Ø - –õ–∏–Ω–∞, —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥ üòé".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "‚ö°Ô∏è –ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å"):
        message_lines = weather_now()
        print(len(message_lines), message_lines)
        text = ""
        for i in range(0,len(message_lines)):
            text = text + message_lines[i] + "\n"
        print(text)
        bot.send_message(message.chat.id, text=text)
    elif (message.text == "üåà –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è"):
        message_lines = weather_3days()
        print(len(message_lines), message_lines)
        text = ""
        for i in range(0, len(message_lines)):
            text = text + message_lines[i] + "\n"
        print(text)
        bot.send_message(message.chat.id, text=text)
    else:
        bot.send_message(message.chat.id, '–Ø —Ç—É–ø–µ–Ω—å–∫–∞—è —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è!')


bot.polling(none_stop=True)
